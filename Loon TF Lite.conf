# Loon TF Lite
# 此全分组配置文件适配Loon tf(240)，未经允许严禁外传！请认真阅读注释部分以便了解。
# 此配置文件会一直随Loon的tf版本特性而变化，不建议商店用户使用。
# 如使用共享Loon tf版，请多加关注更新邮件提醒以及配置文件更新提醒，请在下载更新后及时退出Apple ID。 （详见教程：）
# 此配置文件测试环境为iPhone 11 pro max，iOS 14.3。
# Loon官网：http://www.nsloon.com/
# Loon文字教程tg频道目录：https://t.me/LoonTutorial
# Loon文字教程：https://github.com/chiupam/tutorial/blob/master/Loon/Plus/README.md
# Hell Cell基础视频教程：https://www.youtube.com/watch?v=v3gHdE5UEw8&list=PLt2SU1VzKrnfZHc7IbTsVkd8QKBTwGN0O&index=3
# w37fhy基础视频教程：https://youtu.be/aaxZy--vwvA

# 导入配置后，直接修改并添加订阅链接即可。更新规则、脚本、插件后即可使用。
# 导入配置后，请先点击配置-证书管理-生成新的CA证书，之后进入「设置」>「通用」>「描述文件」，安装Loon的证书，并在「设置」>「通用」>「关于本机」>「证书信任设置」开启对Loon证书的信任。

# Final规则请选择 𝐅𝐢𝐧𝐚𝐥 。 （Loon tf(240)已更名为兜底策略，非𝐅𝐢𝐧𝐚𝐥规则策略组。）

# 该配置文件不同字体所表示的含义不同。 （异体英文生成器：https://www.dute.org/weird-fonts）

# 由于负载均衡策略, 并不是所有机场都能适用, 所以请根据自己实际情况手动设置负载均衡策略组。
#（PS. 请选择同地区节点为一组, 并且遵从各机场的最大IP限制数, 该机场节点选择数量应小于限制数）

[General]
# 基础通用配置
ipv6 = true
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
dns-server = system,
allow-udp-proxy = true
allow-wifi-access = true
wifi-access-http-port = 1031
wifi-access-socket5-port = 7221
proxy-test-url = http://www.gstatic.com/generate_204
test-timeout = 3
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js

[Host]
# 指定DNS服务器

[Proxy]
# 本地节点
# 对于一般类型单个节点可通过Loon内置UI添加，无需通过将节点信息写入
# 内置 DIRECT、REJECT 策略
# 节点名称 = 协议, 服务器地址, 服务器端口, 加密协议, 密码, 

# Vmess
# 节点名称 = 协议, 服务器地址, 端口, 加密方式, UUID, 传输方式:(tcp/ws), path：websocket握手header中的path, host：websocket握手header中的path, over-tls:是否开启tls, tls-name：远端服务器域名, skip-cert-verify：是否跳过证书校验（默认否）
# 5 = Vmess, 1.2.3.4, 10086, aes-128-gcm,”uuid“,transport:ws,path:/,host:icloud.com,over-tls:true,tls-name:youtTlsServerName.com,skip-cert-verify:false

[Remote Proxy]
# 订阅节点
# 别名 = 订阅URL
① = https://dy.v2ray.life/api/
② = https://dy.v2ray.life/api/
③ = https://dy.v2ray.life/api/

# Maying机场命名规则
# VXXXT：支持TCP节点
# VXXXU：支持TCP+UDP节点
# -nX：流量倍率为n倍
# -GS：游戏专用节点
# -NF：支持NETFLIX节点
# -NF*：原生支持NETFLIX节点
# -NBU*：原生支持NETFLIX、HBO、HULU节点
# -NC*：原生支持NETFLIX、BBC节点
# -NU*：原生支持NETFLIX、HULU节点

[Proxy Group]
# 策略组 
# Final规则
𝐅𝐢𝐧𝐚𝐥 = select,𝐏𝐫𝐨𝐱𝐲,𝐃𝐢𝐫𝐞𝐜𝐭

# 策略选项
# Select模式：手动选择模式。
# URL-Test模式：给提供的URL发出http header请求, 根据返回结果, 选择测速最快的节点, 默认间隔600s, 测速超时时间5s, 为了避免资源浪费, 建议节点数不要过多, 只支持单个节点和远端节点, 其他会被忽略。
# URL-Test策略组添加tolerance参数，用于对比切换节点内时的容差，计算方式如下：前一次测速最优节点耗时减去当前测速最优节点耗时大于tolerance时才会进行节点切换，默认100s。)
# （PS. 该模式只会根据延迟高低切换节点，挑选延迟最低的节点。一般情况下不建议使用延迟测试模式，原因有四：一为延迟具有不确定性，单次测试结果不一定准确反映该节点的延迟情况；二为频繁的切换节点会变更节点的地区及类型，极大概率会触发Google等的人机检测机制，带来不良体验；三为延迟低不代表节点速度快，对于观看流媒体等要求速度的操作时，延迟高所带来的影响可忽略不记；四为由于节点物理地区距离的差异，不同地区的节点延迟天然存在高低，简单的延迟测试切换无法体现某些节点的延迟优劣。）
# Fallback模式：和URL-Test类似, 不同的是会根据顺序选择第一个可用的节点, 为了避免资源浪费, 建议节点数不要过多, 只支持单个节点和远端节点, 其他会被忽略。（懒人标配）
# Load-Balance模式:负载均衡，根据选择的负载均衡算法选择子策略，目前三种算法:
#   -Random:随机选择子策略
#   -PCC:基于Random，不同于Random，PCC会让相同主机名的请求锁定同一节点
#   -Round-Robin:轮询选择子策略

𝐏𝐫𝐨𝐱𝐲 = select,🇭🇰𝐇𝐊 𝐅𝐚𝐥𝐥𝐛𝐚𝐜𝐤,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇹🇼𝐓𝐖 𝐏𝐂𝐂,🇰🇷𝐊𝐑 𝐏𝐂𝐂,🇯🇵𝐉𝐏 𝐏𝐂𝐂,🇸🇬𝐒𝐆 𝐏𝐂𝐂,🇺🇸𝐔𝐒 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭
𝐒𝐞𝐥𝐞𝐜𝐭 = select,𝐼𝑃𝑉6,𝐈𝐏𝐋𝐂/𝐈𝐄𝐏𝐋,𝑃𝑟𝑜𝑥𝑖𝑒𝑠
𝐈𝐏𝐋𝐂/𝐈𝐄𝐏𝐋 = select,𝐼𝑃𝐿𝐶/𝐼𝐸𝑃𝐿
𝐒𝐩𝐞𝐞𝐝𝐭𝐞𝐬𝐭 = select,𝐃𝐢𝐫𝐞𝐜𝐭,𝐏𝐫𝐨𝐱𝐲,𝐒𝐞𝐥𝐞𝐜𝐭
𝐇𝐊𝐌𝐓 𝐌𝐞𝐝𝐢𝐚= select,𝐃𝐢𝐫𝐞𝐜𝐭,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇹🇼𝐓𝐖 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭
𝐘𝐨𝐮𝐓𝐮𝐛𝐞 = select,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇹🇼𝐓𝐖 𝐏𝐂𝐂,🇰🇷𝐊𝐑 𝐏𝐂𝐂,🇯🇵𝐉𝐏 𝐏𝐂𝐂,🇸🇬𝐒𝐆 𝐏𝐂𝐂,🇺🇸𝐔𝐒 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭
𝐀𝐩𝐩𝐥𝐞_𝐂𝐃𝐍 = select,𝐃𝐢𝐫𝐞𝐜𝐭,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇹🇼𝐓𝐖 𝐏𝐂𝐂,🇰🇷𝐊𝐑 𝐏𝐂𝐂,🇯🇵𝐉𝐏 𝐏𝐂𝐂,🇸🇬𝐒𝐆 𝐏𝐂𝐂,🇺🇸𝐔𝐒 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭
𝐀𝐩𝐩𝐥𝐞_𝐀𝐏𝐈 = select,🇺🇸𝐔𝐒 𝐏𝐂𝐂,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇯🇵𝐉𝐏 𝐏𝐂𝐂,🇹🇼𝐓𝐖 𝐏𝐂𝐂,🇸🇬𝐒𝐆 𝐏𝐂𝐂,🇰🇷𝐊𝐑 𝐏𝐂𝐂,𝐃𝐢𝐫𝐞𝐜𝐭
𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦 = select,🇸🇬𝐒𝐆 𝐏𝐂𝐂,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇺🇸𝐔𝐒 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭
𝐒𝐩𝐨𝐭𝐢𝐟𝐲 = select,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇺🇸𝐔𝐒 𝐏𝐂𝐂,🇯🇵𝐉𝐏 𝐏𝐂𝐂,🇰🇷𝐊𝐑 𝐏𝐂𝐂,🇹🇼𝐓𝐖 𝐏𝐂𝐂,🇸🇬𝐒𝐆 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭
𝐓𝐰𝐢𝐭𝐭𝐞𝐫 = select,𝐒𝐞𝐥𝐞𝐜𝐭,🇹🇼𝐓𝐖 𝐏𝐂𝐂,🇯🇵𝐉𝐏 𝐏𝐂𝐂,🇸🇬𝐒𝐆 𝐏𝐂𝐂,🇺🇸𝐔𝐒 𝐏𝐂𝐂,🇭🇰𝐇𝐊 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭
𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐚𝐢𝐥 = select,𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐚𝐢𝐥 𝐅𝐚𝐥𝐥𝐛𝐚𝐜𝐤,𝐒𝐞𝐥𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭
𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐞𝐝𝐢𝐚 = select,🇭🇰𝐇𝐊 𝐏𝐂𝐂,🇹🇼𝐓𝐖 𝐏𝐂𝐂,🇰🇷𝐊𝐑 𝐏𝐂𝐂,🇯🇵𝐉𝐏 𝐏𝐂𝐂,🇸🇬𝐒𝐆 𝐏𝐂𝐂,🇺🇸𝐔𝐒 𝐏𝐂𝐂,𝐒𝐞𝐥𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭
𝐔𝐧𝐛𝐫𝐞𝐚𝐤 = select,𝐃𝐢𝐫𝐞𝐜𝐭,𝐏𝐫𝐨𝐱𝐲,𝐑𝐞𝐣𝐞𝐜𝐭
𝐀𝐝 𝐁𝐥𝐨𝐜𝐤 = select,𝐑𝐞𝐣𝐞𝐜𝐭,𝐃𝐢𝐫𝐞𝐜𝐭,𝐏𝐫𝐨𝐱𝐲
𝐒𝐲𝐬𝐭𝐞𝐦 𝐔𝐩𝐝𝐚𝐭𝐞 = select,𝐃𝐢𝐫𝐞𝐜𝐭,𝐑𝐞𝐣𝐞𝐜𝐭
🇭🇰𝐇𝐊 𝐅𝐚𝐥𝐥𝐛𝐚𝐜𝐤 = fallback,🇭🇰𝐻𝐾,𝐑𝐞𝐣𝐞𝐜𝐭,url = http://www.gstatic.com/generate_204,interval = 460,max-timeout = 450
𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐚𝐢𝐥 𝐅𝐚𝐥𝐥𝐛𝐚𝐜𝐤 = fallback,𝐺𝑙𝑜𝑏𝑎𝑙 𝑀𝑎𝑖𝑙,𝐑𝐞𝐣𝐞𝐜𝐭,url = http://www.gstatic.com/generate_204,interval = 600,max-timeout = 1700

# PCC策略
🇭🇰𝐇𝐊 𝐏𝐂𝐂 = load-balance,🇭🇰𝐻𝐾 𝑃𝐶𝐶,url = http://www.gstatic.com/generate_204,interval = 600,max-timeout = 350,algorithm = pcc
🇹🇼𝐓𝐖 𝐏𝐂𝐂 = load-balance,🇹🇼𝑇𝑊 𝑃𝐶𝐶,url = http://www.gstatic.com/generate_204,interval = 620,max-timeout = 425,algorithm = pcc
🇰🇷𝐊𝐑 𝐏𝐂𝐂 = load-balance,🇰🇷𝐾𝑅 𝑃𝐶𝐶,url = http://www.gstatic.com/generate_204,interval = 680,max-timeout = 550,algorithm = pcc
🇯🇵𝐉𝐏 𝐏𝐂𝐂 = load-balance,🇯🇵𝐽𝑃 𝑃𝐶𝐶,url = http://www.gstatic.com/generate_204,interval = 640,max-timeout = 400,0algorithm = pcc
🇸🇬𝐒𝐆 𝐏𝐂𝐂 = load-balance,🇸🇬𝑆𝐺 𝑃𝐶𝐶,url = http://www.gstatic.com/generate_204,interval = 660,max-timeout = 475,algorithm = pcc
🇺🇸𝐔𝐒 𝐏𝐂𝐂 = load-balance,🇺🇸𝑈𝑆 𝑃𝐶𝐶,url = http://www.gstatic.com/generate_204,interval = 610,max-timeout = 850,algorithm = pcc

# 直接连接
𝐃𝐢𝐫𝐞𝐜𝐭 = select,DIRECT

# 阻断连接
𝐑𝐞𝐣𝐞𝐜𝐭 = select,REJECT

# SSID （根据网络环境切换）（如有需要自行配置）
# 别名 = ssid, 默认 = 策略,  蜂窝 = 策略,  ssid名称 = 策略
# SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY

[Remote Filter]
# 节点组
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选, 使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选, 使用筛选后的节点。

# 正则表达式(?i)表示所在位置右侧的表达式开启忽略大小写模式。
# 正则表达式的基础写法教程：https://github.com/chiupam/tutorial/blob/master/Loon/Plus/Regex.md
# 正则表达式示例参考（使用时可直接复制粘贴，并用筛选内容替换A、B即可）：
# (?=.*A)(?=.*B)^.*$  既包含A又包含B
# (A)|(B)             包含A或包含B
# ^((?!A).)*$         不包含A
# (?=.*A)^((?!B).)*$  包含A但不包含B

𝑃𝑟𝑜𝑥𝑖𝑒𝑠 = NameRegex,①,②,③, FilterKey = "^((?!(?i)游戏|GS|Game|IPLC|IEPL|剩|过期|应急|官网|用户|问题|域名|IPV6).)*$"
𝐺𝑙𝑜𝑏𝑎𝑙 𝑀𝑎𝑖𝑙 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(港|HK|Hong))^((?!游戏|GS|Game|IPV|V3|V4|V5).)*$"
𝐼𝑃𝐿𝐶/𝐼𝐸𝑃𝐿 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(IPLC|IEPL))^((?!游戏|GS|Game|IPV).)*$"
𝐼𝑃𝑉6 = NameRegex,①,②,③, FilterKey = "(?i)IPV6"
🇭🇰𝐻𝐾 𝑃𝐶𝐶 = NodeSelect,①,②,③
🇹🇼𝑇𝑊 𝑃𝐶𝐶 = NodeSelect,①,②,③
🇰🇷𝐾𝑅 𝑃𝐶𝐶 = NodeSelect,①,②,③
🇯🇵𝐽𝑃 𝑃𝐶𝐶 = NodeSelect,①,②,③
🇸🇬𝑆𝐺 𝑃𝐶𝐶 = NodeSelect,①,②,③
🇺🇸𝑈𝑆 𝑃𝐶𝐶 = NodeSelect,①,②,③
🇭🇰𝐻𝐾 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(港|HK|Hong))^((?!游戏|GS|Game|IPV).)*$"
🇹🇼𝑇𝑊 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(台|臺|TW|Tai|彰化|新竹|桃园))^((?!游戏|GS|Game|IPV|Network).)*$"
🇰🇷𝐾𝑅 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(KR|Korea|KOR|首尔|韩|韓))^((?!游戏|GS|Gam e|IPV).)*$"
🇯🇵𝐽𝑃 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(日|东京|大阪|埼玉|名古屋|JP|Japan))^((?!游戏|GS|Game|IPV).)*$"
🇸🇬𝑆𝐺 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(新加坡|新|狮城|SG|SGP|Singapore))^((?!游戏|GS|Game|IPV|域名|地址).)*$"
🇺🇸𝑈𝑆 = NameRegex,①,②,③, FilterKey = "(?i)(?=.*(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|圣塔克拉利塔|US|United States))^((?!游戏|GS|Game|IPV).)*$"

[Remote Rule]
# 订阅规则 （此规则组较为简略，有可能存在分流错误的情况。） （靠上的规则组优先级更高。）

# Unbreak （规则修正/白名单，即不应该被去广告分流规则屏蔽的网站。） （建议选择𝐃𝐢𝐫𝐞𝐜𝐭直连策略。）
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/WhiteList/WhiteList.list, policy=𝐔𝐧𝐛𝐫𝐞𝐚𝐤, tag=𝐔𝐧𝐛𝐫𝐞𝐚𝐤, enabled=true

# System Update （屏蔽系统升级提醒）
https://raw.githubusercontent.com/ynby233/Loon/main/Rules/System%20Update.list, policy=𝐒𝐲𝐬𝐭𝐞𝐦 𝐔𝐩𝐝𝐚𝐭𝐞, tag=𝐒𝐲𝐬𝐭𝐞𝐦 𝐔𝐩𝐝𝐚𝐭𝐞, enabled=true

# BlockOTA （屏蔽旅游电子商务）
https://raw.githubusercontent.com/nzw9314/Surge/master/Ruleset/BlockOTA.list, policy=𝐀𝐝 𝐁𝐥𝐨𝐜𝐤, tag=𝐁𝐥𝐨𝐜𝐤𝐎𝐓𝐀, enabled=true

# Antirevoke (绕过企业证书过期验证)
https://raw.githubusercontent.com/nzw9314/Surge/master/Ruleset/Antirevoke.list, policy=𝐑𝐞𝐣𝐞𝐜𝐭, tag=𝐀𝐧𝐭𝐢𝐫𝐞𝐯𝐨𝐤𝐞, enabled=true

# Ad Block Lite （广告屏蔽精简版） （如遇误杀情况，选择𝐃𝐢𝐫𝐞𝐜𝐭直连策略。）
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, policy=𝐀𝐝 𝐁𝐥𝐨𝐜𝐤, tag=𝐀𝐝 𝐁𝐥𝐨𝐜𝐤, enabled=true

# Apple （苹果服务） （关于苹果服务的分流规则详见：https://blog.dada.li/2019/better-proxy-rules-for-apple-services） 
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TestFlight/TestFlight.list, policy=𝐏𝐫𝐨𝐱𝐲, tag=𝐓𝐞𝐬𝐭𝐅𝐥𝐢𝐠𝐡𝐭, enabled=true

https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/Apple_CDN.list, policy=𝐀𝐩𝐩𝐥𝐞_𝐂𝐃𝐍, tag=𝐀𝐩𝐩𝐥𝐞_𝐂𝐃𝐍, enabled=true

https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/Apple_API.list, policy=𝐀𝐩𝐩𝐥𝐞_𝐀𝐏𝐈, tag=𝐀𝐩𝐩𝐥𝐞_𝐀𝐏𝐈, enabled=true

# Telegram
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/Telegram.list, policy=𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦, tag=𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦, enabled=true

# Spotify
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, policy=𝐒𝐩𝐨𝐭𝐢𝐟𝐲, tag=𝐒𝐩𝐨𝐭𝐢𝐟𝐲, enabled=true

# Youtube
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/YouTube.list, policy=𝐘𝐨𝐮𝐓𝐮𝐛𝐞, tag=𝐘𝐨𝐮𝐓𝐮𝐛𝐞, enabled=true

# Speedtest （测速） （选择𝐃𝐢𝐫𝐞𝐜𝐭策略时，测速结果为当前直连网速；选择𝐒𝐞𝐥𝐞𝐜𝐭策略时，测速结果为当前选择的单节点的速度。） （一般情况下，节点速度受制于自身网速。） （多次测速可降低单次测速的误差。）
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, policy=𝐒𝐩𝐞𝐞𝐝𝐭𝐞𝐬𝐭, tag=𝐒𝐩𝐞𝐞𝐝𝐭𝐞𝐬𝐭, enabled=true

# Twitter
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Twitter/Twitter.list, policy=𝐓𝐰𝐢𝐭𝐭𝐞𝐫, tag=𝐓𝐰𝐢𝐭𝐭𝐞𝐫, enabled=true

# Gmail、Outlook
https://raw.githubusercontent.com/nzw9314/Surge/master/Ruleset/Mail.list, policy=𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐚𝐢𝐥, tag=𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐚𝐢𝐥, enabled=true

# Global Media
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia.list, policy=𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐞𝐝𝐢𝐚, tag=𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐞𝐝𝐢𝐚, enabled=true

# China Media
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMedia/ChinaMedia.list, policy=𝐃𝐢𝐫𝐞𝐜𝐭, tag=𝐂𝐡𝐢𝐧𝐚 𝐌𝐞𝐝𝐢𝐚, enabled=true

# Proxy
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy.list, policy=𝐏𝐫𝐨𝐱𝐲, tag=𝐏𝐫𝐨𝐱𝐲, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy_Domain.list, policy=𝐏𝐫𝐨𝐱𝐲, tag=𝐏𝐫𝐨𝐱𝐲, enabled=true

[Rule]
# 本地规则

# Protonmail
DOMAIN-KEYWORD,protonmail,𝐆𝐥𝐨𝐛𝐚𝐥 𝐌𝐚𝐢𝐥

# Dilidili
DOMAIN-SUFFIX,diliktv.com,𝐃𝐢𝐫𝐞𝐜𝐭

# RSSHub
DOMAIN,rsshub.app,𝐏𝐫𝐨𝐱𝐲

# 去掉YouTube++底部广告
DOMAIN-SUFFIX,ehg-youtube.hitbox.com,𝐑𝐞𝐣𝐞𝐜𝐭

# CNIX（薯条）机场
DOMAIN-SUFFIX,xn--d4ty0ojsqzfd.com,𝐃𝐢𝐫𝐞𝐜𝐭

# CNIX（薯条）机场订阅
DOMAIN-SUFFIX,losadhwselfff2332dasd.xyz,𝐃𝐢𝐫𝐞𝐜𝐭

# Maying机场
DOMAIN-SUFFIX,maying.co,𝐏𝐫𝐨𝐱𝐲

# merlinblog
DOMAIN-SUFFIX,merlinblog,𝐏𝐫𝐨𝐱𝐲

GEOIP,CN,𝐃𝐢𝐫𝐞𝐜𝐭

FINAL,𝐅𝐢𝐧𝐚𝐥

[URL Rewrite]
# 本地重写

enable = true

[Remote Rewrite]
# 订阅重写
# 格式：订阅url, 别名(可选)

[Script]
# 本地脚本

enable = true

[Remote Script]
# 订阅脚本

# 使用签到类脚本前需获取cookie，获取完请及时禁用。

# 签到类脚本cron语句格式：* * * * * * 秒 分 时 日 月 周 （示例：0 30 7 * * *   7：30自动运行） (其他设置方法可参考：https://crontab.guru/)

# 关于非签到类脚本的具体使用方法：详见（开启代理后查看）

https://raw.githubusercontent.com/ynby233/Loon/main/Scripts.conf, tag=𝐒𝐜𝐫𝐢𝐩𝐭𝐬, enabled=false

[Plugin]
# 插件
# 若插件与重写或脚本冲突，插件优先级最高。

# 去广告 （如遇误杀请手动禁用。）
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/Advertising.plugin, proxy=𝐀𝐝 𝐁𝐥𝐨𝐜𝐤, tag=𝐀𝐝𝐬, enabled=true

# 指定DNS服务器&神机重定向
https://raw.githubusercontent.com/Tartarus2014/For-own-use/master/Loon/Plugin/Profile.plugin, tag=𝐏𝐫𝐨𝐟𝐢𝐥𝐞, enabled=true

# 订阅解析器 Sub-Store （Sub-Store 文字教程：https://www.notion.so/Sub-Store-6259586994d34c11a4ced5c406264b46）
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, tag=𝐒𝐮𝐛-𝐒𝐭𝐨𝐫𝐞, enabled=true

# 多合一快捷搜索引擎 Q-Search （Q-Search 详细教程：）
https://raw.githubusercontent.com/ynby233/Loon/main/Plugins/Q-Search.plugin, tag=𝐐-𝐒𝐞𝐚𝐫𝐜𝐡, enabled=true

# HKMT Media （Bilibili港澳台地区、iQIYI、MangoTV、WeTV分流规则） （默认直连，如需解锁选择港澳台地区策略。） （附带精简Bilibili客户端功能，如不需要可禁用。）
https://raw.githubusercontent.com/Tartarus2014/For-own-use/master/Loon/Plugin/HKMTMedia.plugin, proxy=𝐇𝐊𝐌𝐓 𝐌𝐞𝐝𝐢𝐚, tag=𝐇𝐊𝐌𝐓 𝐌𝐞𝐝𝐢𝐚, enabled=true

# 知乎网页去广告及客户端去广告、功能增强 （lite版（不去知乎的中间跳转））（默认禁用）
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zhihu/zhihu_lite.lnplugin, tag=𝐙𝐡𝐢𝐇𝐮(𝐋𝐢𝐭𝐞), enabled=false

# Browser-Extensions （百度、谷歌网页优化） （默认禁用）
https://raw.githubusercontent.com/Peng-YM/Loon/master/Plugins/Browser-Extensions.plugin, tag=𝐁𝐫𝐨𝐰𝐬𝐞𝐫-𝐄𝐱𝐭𝐞𝐧𝐬𝐢𝐨𝐧𝐬, enabled=false

# YouTube去广告 （Youtube版本> 15.26.4 可用此插件。）（可以尝试，因为商店版本YouTube更新之后，不保证有效。） （若已开通Premium，请禁用。） （默认禁用）
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/YouTubeAdsTest.plugin, proxy=𝐑𝐞𝐣𝐞𝐜𝐭, tag=𝐘𝐨𝐮𝐓𝐮𝐛𝐞 𝐀𝐝𝐬 𝐓𝐞𝐬𝐭, enabled=false

[MITM]
enable = true
skip-server-cert-verify = true
